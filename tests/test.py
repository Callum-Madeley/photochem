from photochem import Atmosphere, EvoAtmosphere, zahnle_earth

def test_wrapper(pc):
    print(pc.dat.nq)
    print(pc.dat.np)
    print(pc.dat.ng)
    print(pc.dat.nsl)
    print(pc.dat.nll)
    print(pc.dat.nsp)
    print(pc.dat.nw)
    print(pc.dat.planet_mass)
    print(pc.dat.planet_radius)
    print(pc.dat.species_names[0])
    print(pc.dat.atoms_names[0])
    print(pc.dat.photonums[0])
    print(pc.dat.wavl[0])
    print(pc.dat.species_mass[0])
    print(pc.dat.species_redox[0])
    print()
    print(pc.var.nz)
    print(pc.var.top_atmos)
    print(pc.var.bottom_atmos)
    print(pc.var.usol_init[0,0])
    print(pc.var.trop_alt)
    print(pc.var.trop_ind)
    print(pc.var.relative_humidity)
    print(pc.var.H2O_cond_params.k_cond)
    print(pc.var.H2O_cond_params.k_evap)
    print(pc.var.H2O_cond_params.RHc)
    print(pc.var.H2O_cond_params.smooth_factor)
    print(pc.var.z[0])
    # print(pc.var.photon_flux_fcn)
    pc.var.photon_flux_fcn = None
    print(pc.var.cond_params[0].k_cond)
    print(pc.var.temperature[0])
    print(pc.var.edd[0])
    pc.var.custom_binary_diffusion_fcn = None
    print(pc.var.photon_flux[0])
    print(pc.var.grav[0])
    print(pc.var.at_photo_equilibrium)
    print(pc.var.surface_pressure)
    print(pc.var.max_error_reinit_attempts)
    print(pc.var.rtol)
    print(pc.var.atol)
    print(pc.var.mxsteps)
    print(pc.var.equilibrium_time)
    print(pc.var.conv_hist_factor)
    print(pc.var.conv_min_mix)
    print(pc.var.conv_longdy)
    print(pc.var.conv_longdydt)
    print(pc.var.autodiff)
    print(pc.var.epsj)
    print(pc.var.verbose)
    print(pc.var.fast_arbitrary_rate)
    print()
    print(pc.wrk.nsteps)
    print(pc.wrk.t_history[0])
    print(pc.wrk.mix_history[0,0,0])
    print(pc.wrk.longdy)
    print(pc.wrk.longdydt)
    print(pc.wrk.tn)
    print(pc.wrk.usol[0,0])
    print(pc.wrk.pressure[0])
    print(pc.wrk.density[0])
    print(pc.wrk.densities[0,0])
    print(pc.wrk.rx_rates[0,0])
    print(pc.wrk.mubar[0])
    print(pc.wrk.prates[0,0])
    print(pc.wrk.amean_grd[0,0])
    print(pc.wrk.optical_depth[0,0])
    print(pc.wrk.surf_radiance[0])

    pc.prep_atmosphere(pc.wrk.usol)
    pc.out2atmosphere_txt('tmp.txt',overwrite=True)
    pc.gas_fluxes()
    pc.set_lower_bc('O',bc_type='vdep',vdep=0)
    pc.set_upper_bc('O',bc_type='veff',veff=0)
    pc.set_rate_fcn('CH4',None)
    pc.set_temperature(pc.var.temperature)
    pc.set_press_temp_edd(pc.wrk.pressure,pc.var.temperature,pc.var.edd,1e-1*1e6)
    pc.update_vertical_grid(TOA_pressure=1e-7*1e6)
    pc.initialize_stepper(pc.wrk.usol)
    pc.step()
    converged = pc.check_for_convergence()
    pc.destroy_stepper()
    pl = pc.production_and_loss('CH4',pc.wrk.usol)
    print(pl.production_rx[0])
    print(pl.loss_rx[0])
    print(pl.production[0,0])
    print(pl.loss[0,0])
    print(pl.integrated_production[0])
    print(pl.integrated_loss[0])

def main():

    pc1 = EvoAtmosphere(zahnle_earth,\
                        "../examples/ModernEarth/settings.yaml",\
                        "../examples/ModernEarth/Sun_now.txt",\
                        "../examples/ModernEarth/atmosphere.txt",\
                        data_dir="../data")
    test_wrapper(pc1)

    pc = Atmosphere(zahnle_earth,\
                    "../examples/ModernEarth/settings_Atmosphere.yaml",\
                    "../examples/ModernEarth/Sun_now.txt",\
                    "../examples/ModernEarth/atmosphere.txt",\
                    data_dir="../data")
    test_wrapper(pc)

if __name__ == "__main__":
    main()